


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000                 PRESERVE8
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   23 00000000         ; Output a 32-bit number in unsigned decimal format
   24 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   25 00000000         ; Output: none
   26 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   27 00000000         LCD_OutDec
   28 00000000 B5F1            PUSH             {R0,R4-R7, LR}
   29 00000002         ;binding phase
   30 00000002 00000000 
                       DIGIT   EQU              0
   31 00000002         ;allocation phase 
   32 00000002 B081            SUB              SP, #4
   33 00000004         ;access phase- implement the modulus function 
   34 00000004 F04F 0130       MOV              R1, #0x30
   35 00000008 9E00            LDR              R6, [SP, #DIGIT]
   36 0000000A F04F 0600       MOV              R6, #0
   37 0000000E 9600            STR              R6, [SP, #DIGIT]
   38 00000010         ;LDR R6, [SP, #DIGIT]
   39 00000010         ;ADD R6, R6, R1
   40 00000010         ;STR R6, [SP, #DIGIT]
   41 00000010 4602            MOV              R2, R0
   42 00000012 4606            MOV              R6, R0
   43 00000014 F04F 000A       MOV              R0, #10
   44 00000018 F04F 0400       MOV              R4, #0
   45 0000001C         LOOP
   46 0000001C F104 0401       ADD              R4, #1
   47 00000020 4617            MOV              R7, R2
   48 00000022 FBB2 F2F0       UDIV             R2, R2, R0  ; divide our given 
                                                            number by 10 
   49 00000026 FB02 F300       MUL              R3, R2, R0  ; multiply back by 
                                                            10



ARM Macro Assembler    Page 2 


   50 0000002A EBA7 0303       SUB              R3, R7, R3  ; find the remainde
                                                            r 
   51 0000002E FB02 F200       MUL              R2, R0
   52 00000032 2A09            CMP              R2, #9
   53 00000034 D905            BLS              DONE
   54 00000036 FBB2 F2F0       UDIV             R2, R0
   55 0000003A         ;CMP R1, #1
   56 0000003A E7FF            B                NOTCOUNT
   57 0000003C         ;ADD SP, #-4
   58 0000003C         ;STR R3, [SP, #DIGIT]
   59 0000003C         ;B LOOP
   60 0000003C         NOTCOUNT
   61 0000003C B081            ADD              SP, #-4
   62 0000003E 9300            STR              R3, [SP]    ; push that digit o
                                                            n the stack
   63 00000040 E7EC            B                LOOP
   64 00000042         DONE
   65 00000042 B081            ADD              SP, #-4
   66 00000044 9300            STR              R3, [SP, #DIGIT]
   67 00000046         ;LDR R1, [SP, #DIGIT]
   68 00000046         OVER
   69 00000046 9800            LDR              R0, [SP]
   70 00000048 B001            ADD              SP, #4
   71 0000004A         ADJUST
   72 0000004A F100 0030       ADD              R0, #0x30
   73 0000004E         ;ADD R0, R1
   74 0000004E E92D 0FFF       PUSH             {R0-R11}
   75 00000052 F7FF FFFE       BL               ST7735_OutChar
   76 00000056 E8BD 0FFF       POP              {R0-R11}
   77 0000005A F114 34FF       ADDS             R4, #-1
   78 0000005E D001            BEQ              DEAL
   79 00000060 2C01            CMP              R4, #1
   80 00000062         ;BEQ POPLOCAL 
   81 00000062 E7F0            B                OVER
   82 00000064         ;POPLOCAL
   83 00000064         ;LDR R0, [SP, #DIGIT]
   84 00000064         ;B ADJUST
   85 00000064         ;deallocation phase
   86 00000064         DEAL
   87 00000064 B001            ADD              SP, #4
   88 00000066 E8BD 40F1       POP              {R0,R4-R7, LR}
   89 0000006A 4770            BX               LR
   90 0000006C         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   91 0000006C         
   92 0000006C         ; -----------------------LCD _OutFix--------------------
                       --
   93 0000006C         ; Output characters to LCD display in fixed-point format
                       
   94 0000006C         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   95 0000006C         ; Inputs:  R0 is an unsigned 32-bit number
   96 0000006C         ; Outputs: none
   97 0000006C         ; E.g., R0=0,    then output "0.000 "
   98 0000006C         ;       R0=3,    then output "0.003 "
   99 0000006C         ;       R0=89,   then output "0.089 "
  100 0000006C         ;       R0=123,  then output "0.123 "
  101 0000006C         ;       R0=9999, then output "9.999 "
  102 0000006C         ;       R0>9999, then output "*.*** "
  103 0000006C         ; Invariables: This function must not permanently modify



ARM Macro Assembler    Page 3 


                        registers R4 to R11
  104 0000006C         LCD_OutFix
  105 0000006C E92D 41F0       PUSH             {R4-R8, LR}
  106 00000070 46F0            MOV              R8, LR
  107 00000072         ;binding phase- 
  108 00000072 00000000 
                       PER     EQU              0
  109 00000072         ;allocation phase 
  110 00000072 B081            SUB              SP, #4
  111 00000074         ;access phase- implement the modulus function 
  112 00000074 9E00            LDR              R6, [SP, #PER]
  113 00000076 F04F 0600       MOV              R6, #0
  114 0000007A 9600            STR              R6, [SP, #PER]
  115 0000007C         ;LDR R6, [SP, #PER]
  116 0000007C         ;ADD R6, #0x2E
  117 0000007C         ;STR R6, [SP, #PER]
  118 0000007C 4602            MOV              R2, R0
  119 0000007E F242 7610       MOV              R6, #10000
  120 00000082 42B0            CMP              R0, R6
  121 00000084 D218            BHS              HUGENUM
  122 00000086 4606            MOV              R6, R0
  123 00000088 F04F 000A       MOV              R0, #10
  124 0000008C F04F 0404       MOV              R4, #4
  125 00000090         LOOP1
  126 00000090 F104 34FF       ADD              R4, #-1
  127 00000094 4617            MOV              R7, R2
  128 00000096 FBB2 F2F0       UDIV             R2, R2, R0  ; divide our given 
                                                            number by 10 
  129 0000009A FB02 F300       MUL              R3, R2, R0  ; multiply back by 
                                                            10
  130 0000009E EBA7 0303       SUB              R3, R7, R3  ; find the remainde
                                                            r 
  131 000000A2 FB02 F200       MUL              R2, R0
  132 000000A6 FBB2 F2F0       UDIV             R2, R0
  133 000000AA B081            ADD              SP, #-4
  134 000000AC F103 0330       ADD              R3,#0x30
  135 000000B0 9300            STR              R3, [SP]    ; push that digit o
                                                            n the stack
  136 000000B2 2C00            CMP              R4, #0
  137 000000B4 D1EC            BNE              LOOP1
  138 000000B6 E008            B                OUT
  139 000000B8 F04F 032A 
                       HUGENUM MOV              R3, #0x2A
  140 000000BC F04F 0004       MOV              R0, #4
  141 000000C0         STARLOOP
  142 000000C0 B081            ADD              SP, #-4
  143 000000C2 9300            STR              R3, [SP]
  144 000000C4 F110 30FF       ADDS             R0, #-1
  145 000000C8 D1FA            BNE              STARLOOP
  146 000000CA         OUT
  147 000000CA F04F 0405       MOV              R4, #5
  148 000000CE         OVER1
  149 000000CE 2C04            CMP              R4, #4
  150 000000D0 D00B            BEQ              PERIOD
  151 000000D2 9800            LDR              R0, [SP]
  152 000000D4 B001            ADD              SP, #4
  153 000000D6         ADJUST1
  154 000000D6 E92D 4FFF       PUSH             {R0-R11,LR}
  155 000000DA F7FF FFFE       BL               ST7735_OutChar



ARM Macro Assembler    Page 4 


  156 000000DE E8BD 4FFF       POP              {R0-R11,LR}
  157 000000E2 F114 34FF       ADDS             R4, #-1
  158 000000E6 D003            BEQ              DEAL1
  159 000000E8 E7F1            B                OVER1
  160 000000EA         PERIOD
  161 000000EA         ;LDR R0, [SP, #PER]
  162 000000EA F04F 002E       MOV              R0, #0x2E
  163 000000EE E7F2            B                ADJUST1
  164 000000F0         ;deallocation phase
  165 000000F0         DEAL1
  166 000000F0 B001            ADD              SP, #4
  167 000000F2 4640            MOV              R0, R8
  168 000000F4 E8BD 41F0       POP              {R4-R8, LR}
  169 000000F8 4686            MOV              LR, R0
  170 000000FA 4770            BX               LR
  171 000000FC         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  172 000000FC         
  173 000000FC                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  174 000000FC                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
ADJUST 0000004A

Symbol: ADJUST
   Definitions
      At line 71 in file Print.s
   Uses
      None
Comment: ADJUST unused
ADJUST1 000000D6

Symbol: ADJUST1
   Definitions
      At line 153 in file Print.s
   Uses
      At line 163 in file Print.s
Comment: ADJUST1 used once
DEAL 00000064

Symbol: DEAL
   Definitions
      At line 86 in file Print.s
   Uses
      At line 78 in file Print.s
Comment: DEAL used once
DEAL1 000000F0

Symbol: DEAL1
   Definitions
      At line 165 in file Print.s
   Uses
      At line 158 in file Print.s
Comment: DEAL1 used once
DONE 00000042

Symbol: DONE
   Definitions
      At line 64 in file Print.s
   Uses
      At line 53 in file Print.s
Comment: DONE used once
HUGENUM 000000B8

Symbol: HUGENUM
   Definitions
      At line 139 in file Print.s
   Uses
      At line 121 in file Print.s
Comment: HUGENUM used once
LCD_OutDec 00000000

Symbol: LCD_OutDec



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 27 in file Print.s
   Uses
      At line 14 in file Print.s
Comment: LCD_OutDec used once
LCD_OutFix 0000006C

Symbol: LCD_OutFix
   Definitions
      At line 104 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
LOOP 0000001C

Symbol: LOOP
   Definitions
      At line 45 in file Print.s
   Uses
      At line 63 in file Print.s
Comment: LOOP used once
LOOP1 00000090

Symbol: LOOP1
   Definitions
      At line 125 in file Print.s
   Uses
      At line 137 in file Print.s
Comment: LOOP1 used once
NOTCOUNT 0000003C

Symbol: NOTCOUNT
   Definitions
      At line 60 in file Print.s
   Uses
      At line 56 in file Print.s
Comment: NOTCOUNT used once
OUT 000000CA

Symbol: OUT
   Definitions
      At line 146 in file Print.s
   Uses
      At line 138 in file Print.s
Comment: OUT used once
OVER 00000046

Symbol: OVER
   Definitions
      At line 68 in file Print.s
   Uses
      At line 81 in file Print.s
Comment: OVER used once
OVER1 000000CE

Symbol: OVER1
   Definitions
      At line 148 in file Print.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 159 in file Print.s
Comment: OVER1 used once
PERIOD 000000EA

Symbol: PERIOD
   Definitions
      At line 160 in file Print.s
   Uses
      At line 150 in file Print.s
Comment: PERIOD used once
STARLOOP 000000C0

Symbol: STARLOOP
   Definitions
      At line 141 in file Print.s
   Uses
      At line 145 in file Print.s
Comment: STARLOOP used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DIGIT 00000000

Symbol: DIGIT
   Definitions
      At line 30 in file Print.s
   Uses
      At line 35 in file Print.s
      At line 37 in file Print.s
      At line 66 in file Print.s

PER 00000000

Symbol: PER
   Definitions
      At line 108 in file Print.s
   Uses
      At line 112 in file Print.s
      At line 114 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 75 in file Print.s
      At line 155 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
352 symbols in table
